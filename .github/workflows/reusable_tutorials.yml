name: Reusable Tutorials Workflow

on:
  workflow_dispatch:
    inputs:
      smoke_test:
        required: true
        type: boolean
      use_stable_pytorch_gpytorch:
        required: true
        type: boolean
  workflow_call:
    inputs:
      smoke_test:
        required: false
        type: boolean
        default: true
      use_stable_pytorch_gpytorch:
        required: false
        type: boolean
        default: false

jobs:
  tutorials:
    name: Run tutorials
    runs-on: ubuntu-latest
    env:
      # `uv pip ...` requires venv by default. This skips that requirement.
      UV_SYSTEM_PYTHON: 1
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    - name: Fetch all history for all tags and branches
      # We need to do this so setuptools_scm knows how to set the BoTorch version.
      run: git fetch --prune --unshallow
    - if: ${{ !inputs.use_stable_pytorch_gpytorch }}
      name: Install latest PyTorch & GPyTorch
      run: |
        uv pip install --pre torch torchvision --index-url https://download.pytorch.org/whl/nightly/cpu
        uv pip install git+https://github.com/cornellius-gp/linear_operator.git
        uv pip install git+https://github.com/cornellius-gp/gpytorch.git
    - if: ${{ inputs.use_stable_pytorch_gpytorch }}
      name: Install min required PyTorch, GPyTorch, and linear_operator
      run: |
        # Extract minimum versions from pyproject.toml
        min_torch_version=$(grep '"torch>=' pyproject.toml | sed 's/.*"torch>=\([^"]*\)".*/\1/')
        min_gpytorch_version=$(grep '"gpytorch>=' pyproject.toml | sed 's/.*"gpytorch>=\([^"]*\)".*/\1/')
        min_linear_operator_version=$(grep '"linear_operator>=' pyproject.toml | sed 's/.*"linear_operator>=\([^"]*\)".*/\1/')
        uv pip install "numpy<2"  # Numpy >2.0 is not compatible with PyTorch <2.2.
        uv pip install "torch==${min_torch_version}" "gpytorch==${min_gpytorch_version}" "linear_operator==${min_linear_operator_version}" torchvision
    - name: Install BoTorch with tutorials dependencies
      run: |
        uv pip install .[tutorials]
    - if: ${{ inputs.smoke_test }}
      name: Run tutorials with smoke test
      run: |
        python scripts/run_tutorials.py -p "$(pwd)" -s
    - if: ${{ !inputs.smoke_test }}
      name: Run tutorials without smoke test
      run: |
        python scripts/run_tutorials.py -p "$(pwd)"
